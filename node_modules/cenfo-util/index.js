var bigInt = require('big-integer');
var phi;
var n;
var e;

module.exports = {
  no_imp: function () {
    // funcion dummy
    return ("no implementado");
  },
  gdc: function (a, b) {
    var r;
    while (b.greater(bigInt())) {
      r = a.mod(b);
      a = b;
      b = r;
    }
    return a;
  },
  obtener_e: function (p, q) {
    // e es la llave publica
    e = bigInt(2);
    phi = (p.minus(bigInt.one)).multiply(q.minus(bigInt.one));
    console.log("phi=" + phi.toString());
    while (e.lesser(phi)) {
      if (module.exports.gdc(e, phi).equals(bigInt.one)) {
        break;
      } else {
        e = e.plus(bigInt.one);
      }
    }
    console.log("e=" + e.toString());
    return e;
  },
  obtener_d: function () {
    // d es la llave privada
    var d = (bigInt.one.mod(phi)).divide(e);
    d = e.modInv(phi);
    console.log("d=" + d.toString());
    return d;
  },

  obtener_n: function (p, q) {
    n = p.multiply(q);
    console.log("n=" + n.toString());
    return n;
  }
};
