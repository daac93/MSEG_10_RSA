var util = require('cenfo-util');
var bigInt = require('big-integer');

var p = bigInt("203956878356401977405765866929034577280193993314348263094772646453283062722701277632936616063144088173312372882677123879538709400158306567338328279154499698366071906766440037074217117805690872792848149112022286332144876183376326512083574821647933992961249917319836219304274280243803104015000563790123");
var q = bigInt("250556952327646214427246777488032351712139094643988394726193347352092526616305469220133287929222242315761834129196430398011844978805263868522770723615504744438638381670321613949280530254014602887707960375752016807510602846590492724216092721283154099469988532068424757856392563537802339735359978831013");

// 1000 d√≠gitos
//var p = bigInt
//var q = bigInt

module.exports = {
  encriptar: function (mensaje) {
    console.log('Encriptando mensaje...\n');
    console.log('Mensaje: \n' + mensaje);

    var e = util.obtener_e(p, q);
    var n = util.obtener_n(p, q);

    var mensajeEnHexadecimal = module.exports.convertirStringAHexadecimal(mensaje);
    var mensajeProcesadoParaEncriptar = bigInt(mensajeEnHexadecimal, 16);

    var mensajeEncriptado = mensajeProcesadoParaEncriptar.modPow(e, n);
    return mensajeEncriptado.toString();
  },
  desencriptar: function (codificado) {
    console.log('\nDesencriptando mensaje...\n');
    console.log('Mensaje: \n' + codificado);

    var d = util.obtener_d();
    var n = util.obtener_n(p, q);

    // Mensaje listo para desencriptar, se obtiene como un BigInt
    var mensajeProcesadoParaDesencriptar = bigInt(codificado);

    var mensajeDesencriptado = mensajeProcesadoParaDesencriptar.modPow(d, n);
    mensajeDesencriptado = module.exports.convertirNumeroEnASCII(mensajeDesencriptado);

    return mensajeDesencriptado;
  },
  convertirStringAHexadecimal: function (string) {
    var stringEnHexadecimal = Buffer.from(string, 'utf-8').toString('hex');

    return stringEnHexadecimal;
  },
  convertirNumeroEnASCII: function (numero) {
    var numeroEnHexadecimal = numero.toString(16);
    var hexadecimalEnString = Buffer.from(numeroEnHexadecimal, 'hex').toString('utf-8');
  
    return hexadecimalEnString;
  }
};




